// Script para probar la autenticaci√≥n de Swagger
import fetch from 'node-fetch';

const testSwaggerAuth = async () => {
  const baseUrl = 'http://localhost:3000/api-docs';
  
  console.log('üîê Probando autenticaci√≥n de Swagger...\n');
  
  // Test 1: Sin autenticaci√≥n (deber√≠a fallar)
  console.log('1Ô∏è‚É£ Probando sin autenticaci√≥n...');
  try {
    const response1 = await fetch(baseUrl);
    console.log(`   Status: ${response1.status}`);
    if (response1.status === 401) {
      console.log('   ‚úÖ Correcto: Acceso denegado sin credenciales');
    } else {
      console.log('   ‚ùå Error: Deber√≠a requerir autenticaci√≥n');
    }
  } catch (error) {
    console.log('   ‚ùå Error:', error.message);
  }
  
  // Test 2: Con credenciales correctas
  console.log('\n2Ô∏è‚É£ Probando con credenciales correctas...');
  try {
    const response2 = await fetch(baseUrl, {
      headers: {
        'Authorization': 'Basic ' + Buffer.from('admin:swagger123').toString('base64')
      }
    });
    console.log(`   Status: ${response2.status}`);
    if (response2.status === 200) {
      console.log('   ‚úÖ Correcto: Acceso permitido con credenciales v√°lidas');
    } else {
      console.log('   ‚ùå Error: Deber√≠a permitir acceso con credenciales v√°lidas');
    }
  } catch (error) {
    console.log('   ‚ùå Error:', error.message);
  }
  
  // Test 3: Con credenciales incorrectas
  console.log('\n3Ô∏è‚É£ Probando con credenciales incorrectas...');
  try {
    const response3 = await fetch(baseUrl, {
      headers: {
        'Authorization': 'Basic ' + Buffer.from('admin:wrongpassword').toString('base64')
      }
    });
    console.log(`   Status: ${response3.status}`);
    if (response3.status === 401) {
      console.log('   ‚úÖ Correcto: Acceso denegado con credenciales incorrectas');
    } else {
      console.log('   ‚ùå Error: Deber√≠a denegar acceso con credenciales incorrectas');
    }
  } catch (error) {
    console.log('   ‚ùå Error:', error.message);
  }
  
  console.log('\nüéâ Pruebas completadas!');
};

testSwaggerAuth();
